<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <id>com.github.linzihao97.plugindemo</id>
    <name>plugin-demo</name>
    <vendor>linzihao97</vendor>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.java</depends>

    <extensions defaultExtensionNs="com.intellij">
        <applicationService serviceImplementation="com.github.linzihao97.plugindemo.services.MyApplicationService"/>
        <projectService serviceImplementation="com.github.linzihao97.plugindemo.services.MyProjectService"/>
        <toolWindow id="myToolWindow" factoryClass="com.example.linzihao97.plugindemo.toolwindow.MyToolWindowFactory"/>
        <!--
     Extend the IntelliJ Platform local inspection type, and connect it to the implementation class in this plugin.
     <localInspection> type element is applied within the scope of a file under edit.
     It is preferred over <inspectionToolProvider>
       @see intellij.platform.resources.LangExtensionPoints
       @see com.intellij.codeInspection.InspectionProfileEntry
     Attributes:
       language= Language ID
       shortName= Not specified, will be computed by the underlying implementation classes.
       displayName= The string to be shown in the Preferences | Editor | Inspections panel
           The displayName gets registered to identify this inspection.
           Can be localized using key= and bundle= attributes instead.
       groupPath= Defines the outermost grouping for this inspection in
           the Preferences | Editor | Inspections panel. Not localized.
       groupBundle= Name of *.bundle file to translate groupKey.
           In this case reuse an IntelliJ Platform bundle file from intellij.platform.resources.en
       groupKey= Key to use for translation subgroup name using groupBundle file.
           In this case reuse the IntelliJ Platform subcategory "Probable bugs"
       enabledByDefault= Inspection state when Inspections panel is created.
       level= The default level of error found by this inspection, e.g. INFO, ERROR, etc.
           @see com.intellij.codeHighlighting.HighlightDisplayLevel
       implementationClass= FQN of inspection implementation
   -->
        <localInspection language="JAVA"
                         displayName="SDK: '==' or '!=' used instead of 'equals()'"
                         groupPath="Java"
                         groupBundle="messages.InspectionsBundle"
                         groupKey="group.names.probable.bugs"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="com.example.linzihao97.plugindemo.inspection.ComparingReferencesInspection"/>
    </extensions>

    <applicationListeners>
        <listener class="com.github.linzihao97.plugindemo.listeners.MyProjectManagerListener"
                  topic="com.intellij.openapi.project.ProjectManagerListener"/>
    </applicationListeners>
    <actions>
        <action id="com.example.linzihao97.plugindemo.action.BasicAction"
                class="com.example.linzihao97.plugindemo.action.BasicAction"
                text="basic" description="basic">
            <add-to-group group-id="ToolsMenu" anchor="first"/>
        </action>
        <action id="com.example.linzihao97.plugindemo.psi.PsiAction"
                class="com.example.linzihao97.plugindemo.psi.PsiAction" text="psi"/>
    </actions>
</idea-plugin>
